// Generated by CoffeeScript 2.3.1
(function() {
  var HTMLHint, isHtml, isTmpPath, os, path, strfy, td, test;

  ({test} = require('ava'));

  strfy = require('../');

  td = require('testdouble');

  os = require('os');

  path = require('path');

  HTMLHint = require("htmlhint").HTMLHint;

  isTmpPath = function(p) {
    var flag;
    flag = false;
    if (path.isAbsolute(p)) {
      flag = true;
    } else {
      throw new Error("TMPDIR is not absolute path");
    }
    return flag;
  };

  isHtml = function(str) {
    var rules, v;
    rules = {
      "tagname-lowercase": false,
      "attr-lowercase": false,
      "attr-value-double-quotes": true,
      "doctype-first": true,
      "tag-pair": true,
      "spec-char-escape": false,
      "id-unique": true,
      "src-not-empty": true,
      "attr-no-duplication": true,
      "title-require": true
    };
    v = HTMLHint.verify(str, rules);
    if (v.length) {
      throw new Error(v[0].message);
    } else {
      return true;
    }
  };

  test.serial.beforeEach(function(t) {
    t.context.utility = td.replace('../lib/utility');
    t.context.strfy = require('../');
  });

  test.afterEach(function() {
    td.reset();
  });

  // TODO: testdouble & ava 注意ポイント
  // serialにしないと不安定
  test.serial('save', function(t) {
    td.when(t.context.utility.writeFile(td.matchers.argThat(isTmpPath), td.matchers.argThat(isHtml))).thenResolve();
    return t.context.strfy.save({
      a: 100
    }).then(function(result) {
      var ex;
      // 代替のutility.writeFileが呼ばれていることの確認
      ex = td.explain(t.context.utility.writeFile);
      t.is(ex.callCount, 1);
    }).catch(function(e) {
      t.fail();
    });
  });

  test.serial('open', function(t) {
    td.when(t.context.utility.writeFile(td.matchers.argThat(isTmpPath), td.matchers.argThat(isHtml))).thenResolve();
    td.when(t.context.utility.opn(td.matchers.argThat(isTmpPath), {
      wait: false
    })).thenResolve();
    return t.context.strfy.open({
      a: 100
    }).then(function(result) {
      // 代替のutilityが呼ばれていることの確認
      t.is(td.explain(t.context.utility.writeFile).callCount, 1);
      t.is(td.explain(t.context.utility.opn).callCount, 1);
    }).catch(function(e) {
      t.fail();
    });
  });

  test.serial('isTmpPath', function(t) {
    t.true(isTmpPath(os.tmpdir()));
  });

}).call(this);
